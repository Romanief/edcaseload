# BOROUGHS = [
#     ("GRE", "Greenwich"),
#     ("BEX", "Bexley"),
#     ("LEW", "Lewisham"),
#     ("HOM", "Homerton"),
#     ("OOB", "Out of borough")
# ]
# SPECIALITIES = [
#     ("CAR", "Cardiology"),
#     ("COE", "Geriatric"),
#     ("PED", "Paediatric"),
#     ("ONC", "Oncology"),
#     ("ORT", "Orthopaedic"),
#     ("NEU", "Neurology"),
#     ("RES", "Respiratory")
# ]
# REASONS = [
#     ("FAL", "Fall"),
#     ("NEU", "Neuro"),
#     ("GEN", "Generally unwell"),
#     ("MEH", "Mental health"),
#     ("ORT", "Orthopaedic"),
#     ("RES", "Respiratory")
# ]
# LOCATION = [
#     ("HOM", "Home"),
#     ("WAR", "Ward"),
#     ("ICB", "Rehab unit"),
#     ("PLC", "Placement")
# ]


# class Doctor(models.Model):
#     name: models.CharField(max_length=50)
#     speciality: models.CharField(max_length=50, default="COE")


# class AdmissionReason(models.Model):
#     reason: models.CharField(max_length=50, default="FAL")


# class Borough(models.Model):
#     Borough: models.CharField(max_length=20, default="GRE")


# class Discharge_locations(models.Model):
#     location: models.CharField(max_length=20, default="HOM")



    # borough = models.ForeignKey(
    #     Borough, on_delete=models.CASCADE)
    # doctor = models.ForeignKey(
    #     Doctor, on_delete=models.CASCADE, blank=True, null=True)
    # reason = models.ForeignKey(
    #     AdmissionReason, on_delete=models.CASCADE)
    # discharge_destination = models.ForeignKey(
    #     Discharge_locations, on_delete=models.CASCADE)